SELECT ir.create_date payment_date, p.project_id as contest_id,  ttc.name client,	ttp.name billing_project_name,  tdp.name direct_project_name,
       (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       nvl((select  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase
                where phase_type_id = (case when p.project_category_id in (29, 9) then 4 when pc.project_type_id in (1,2) then 10 else 4 end)
				and project_id = p.project_id),
		(select  MAX(NVL(actual_end_time, scheduled_end_time)) from project_phase where project_id = p.project_id and phase_type_id = 4)) as completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', pc.name) category, pi.value as contest_name,
       --CASE WHEN ps.project_status_id not in (1,2,3) THEN 'Finished'  WHEN ps.project_status_id = 1 THEN 'Active' ELSE 'Draft' END as contest_status,
       ps.name as contest_status,
  SUM(case when (p.project_status_id  = 7 OR (p.project_status_id  = 1
        and exists (select phase_type_id from project_phase
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pc.project_type_id in (1,2) then 10  else 4 end)
                and project_id = p.project_id and phase_status_id = 3)))
   then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount)
           FROM  informixoltp:payment_detail pmd,
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id,
                 informixoltp:payment pm2
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1
            and pm.most_recent_detail_id = pmd.payment_detail_id
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id
        and pi26.value = 'On' and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount)
           FROM  informixoltp:payment_detail pmd,
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id,
                 informixoltp:payment pm2
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1
            and pm.most_recent_detail_id = pmd.payment_detail_id
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_total_member_costs,
    'Credit' as payment_type_desc,
    'Credit' as line_item_category,
    '' as reference_id,
    ir.invoice_amount as line_item_amount, ttc.client_id, ttp.project_id billing_project_id,
    tdp.project_id direct_project_id, p.project_category_id, 0 as payment_detail_id, 0 is_studio, 0 as payment_id, '' as payment_desc,
  ir.invoice_amount as invoice_amount,
  ir.processed as processed,
  (select i.invoice_date from informixoltp:invoice i where i.invoice_id = ir.invoice_id)  as process_date,
  (select i.invoice_number from informixoltp:invoice i where i.invoice_id = ir.invoice_id)   as invoice_number,
  ir.invoice_id as invoice_id,
  ir.invoice_record_id as invoice_record_id

FROM informixoltp:invoice_record ir, project p, tc_direct_project tdp, project_status_lu ps,
     project_category_lu pc, project_info pi, project_info pi2, project_info pi3,
     time_oltp:project ttp, time_oltp:client_project ttcp, time_oltp:client ttc
where  ir.contest_id = p.project_id and ir.invoice_type_id = 12
  and p.project_status_id = ps.project_status_id and p.project_category_id = pc.project_category_id
  and p.project_id = pi.project_id and pi.project_info_type_id = 6
  and p.project_id = pi2.project_id and pi2.project_info_type_id = 31
  and p.project_id = pi3.project_id and pi3.project_info_type_id = 32
  and pi3.value = ttp.project_id and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id and p.project_category_id != 27
  and p.tc_direct_project_id = tdp.project_id
group by 1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29

UNION

SELECT ir.create_date payment_date, null::int as contest_id,  ttc.name client,	ttp.name billing_project_name,  tdp.name direct_project_name,
  null::datetime year to fraction as launch_date, null::datetime year to fraction as completion_date, null::varchar as category,
  null::varchar as contest_name, null::varchar as contest_status,
  SUM(NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.cockpit_project_id = tdp.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount)
           FROM  informixoltp:payment_detail pmd,
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id,
                 informixoltp:payment pm2
            WHERE pmd.cockpit_project_id = tdp.project_id and pmd2.installment_number = 1
            and pm.most_recent_detail_id = pmd.payment_detail_id
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
    ) as actual_total_member_costs,  'Credit' as payment_type_desc,
    'Credit' as line_item_category,
    '' as reference_id,
    ir.invoice_amount as line_item_amount, ttc.client_id,  ttp.project_id billing_project_id,
    tdp.project_id direct_project_id, null::int as project_category_id, 0 as payment_detail_id,  0 as is_studio,
    0 as payment_id, '0' as payment_desc,
    ir.invoice_amount as invoice_amount,
    ir.processed as processed,
    (select i.invoice_date from informixoltp:invoice i where i.invoice_id = ir.invoice_id)  as process_date,
    (select i.invoice_number from informixoltp:invoice i where i.invoice_id = ir.invoice_id)   as invoice_number,
    ir.invoice_id as invoice_id,
    ir.invoice_record_id as invoice_record_id

FROM informixoltp:invoice_record ir, tc_direct_project tdp,
     time_oltp:project ttp, time_oltp:client_project ttcp, time_oltp:client ttc
where ir.cockpit_project_id = tdp.project_id and ir.invoice_type_id = 12
    and ttp.project_id = ttcp.project_id and ttcp.client_id = ttc.client_id
    and ttp.project_id = (select min(billing_account_id) from corporate_oltp:direct_project_account dpa where dpa.project_id = tdp.project_id)
group by 1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29
